修改了Route类(invoke)
修改了 RouteBuilder类(determineActionMethod,build)
修改了 RouteMapping 构造方法，把get,post合并成get
修改了 AbstractSerializationProvider.resolveResponse 设置默认的返回结果格式json
修改了 RestExpress,添加了一个springctx,Configuration config,buildRequestHandler,
bind() 添加执行spring初始化完毕后执行用户的特定对象方法
修改DefaultRequestHandler，添加一个构建方法
修改RouteDeclaration.createRouteMapping方法，原来如果不定义routes时直接报错，现在改成waring提示
修改 JacksonTimepointSerializer构造方法，使用符合国内的日期输出格式yyyy-MM-dd hh:mm:ss

增加 org.restexpress.util.StringUtil类
增加 org.restexpress.util.Configuration类,可以从用户的netty.properties文件里加载配置
增加包下所有类  org.restexpress.intf
增加包下所有类  org.restexpress.domain.ex
增加ZhCnTimeAdapter类

修改后restexpress框架变成直接依赖spring的2个包，context,beans

扩展功能
版本1.0.0
1. 参考springmvc自动注入参数，对象（会话对象）,校验参数是否必传,controller,方法别名支持,参数先从get里获取，再从post获取，
如果都传了，以post为准
2. 对特定url请求做权限检查提供了接口,默认/priv/
3. netty参数配置化
4. spring加载后按顺序执行用户指定的方法(实现SpringInitCompleteAware)
5. 实现自动加载获取权限数据
6. 修改json日期输出格式

版本1.0.2
1. 增加权限AuthorityIntf,AuthRightIntf接口，实现这2个接口，然后在业务里直接注入使用
2. 增加SystemStatIntf,实现这个接口，让运维或开发可以在telnet里输入命令查看系统状态
3. 增加backlog配置，可以配置系统接收队列的大小
4. 增加send buffer,receive buffer缓冲区大小配置
5. 如果想在spring 的服务里使用spring context,请实现ApplicationContextAware接口，RestExpress.getSpringCtx是给
   外勤原来测试代码使用的
   
版本1.0.4 
1. 支持定制websocket
2. 支持定制文件传输
3. 支持定制的channelHandler(用户定义的如果是shareable,请确保是线程安全，如果不是shareable,确保创建的对象足够快)
默认用户定义的handler是放在业务线程池里执行的，可以通过参数配置线程池大小    

版本1.0.5 后续计划开发
1. 基于redis pub/sub做会话同步，去中心 /或做弱中心,同时可实现同一个用户只能在一个终端登录
2. 实现initBinder转换其他日期格式
3. 修改输出的xml root元素格式

需要注意的地方
   controller类，不能是被cglib修改后或代理的类(比如hibernate是使用cglib实现的，实际类名后是有$$或数字的类似的),否则会因为无法根据动态代理后的类找到
   对应的方法而无法进行url到对应类对应方法的映射,对于使用cglib，解决的办法是分层实现，上层不使用cglib,下层实现使用cglib实现，比如
   controller+service层,在service层使用cglib